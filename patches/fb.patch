diff --cc packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
index 96b3d46,1395ff6..0000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarPolicy.java
@@@ -129,9 -132,9 +132,12 @@@ public class PhoneStatusBarPolicy imple
              else if (action.equals(TelecomManager.ACTION_CURRENT_TTY_MODE_CHANGED)) {
                  updateTTY(intent);
              }
 +            else if (action.equals(Intent.ACTION_HEADSET_PLUG)) {
 +                updateHeadset(intent);
 +            }
+             else if (action.equals(BluetoothHeadset.ACTION_VENDOR_SPECIFIC_HEADSET_EVENT)) {
+                 updateBluetoothBattery(intent);
+             }
          }
      };
  
@@@ -169,7 -172,9 +175,10 @@@
          filter.addAction(AudioManager.INTERNAL_RINGER_MODE_CHANGED_ACTION);
          filter.addAction(TelephonyIntents.ACTION_SIM_STATE_CHANGED);
          filter.addAction(TelecomManager.ACTION_CURRENT_TTY_MODE_CHANGED);
 +        filter.addAction(Intent.ACTION_HEADSET_PLUG);
+         filter.addAction(BluetoothHeadset.ACTION_VENDOR_SPECIFIC_HEADSET_EVENT);
+         filter.addCategory(BluetoothHeadset.VENDOR_SPECIFIC_HEADSET_EVENT_COMPANY_ID_CATEGORY
+             + "." + Integer.toString(BluetoothAssignedNumbers.APPLE));
          mContext.registerReceiver(mIntentReceiver, filter, null, mHandler);
  
          // listen for user / profile change.
diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 9abc475..b38ecd6 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -791,14 +791,14 @@
             1 - Toggle theater mode setting
             2 - Brightness boost
     -->
-    <integer name="config_doublePressOnPowerBehavior">0</integer>
+    <integer name="config_doublePressOnPowerBehavior">3</integer>
 
     <!-- Control the behavior when the user triple presses the power button.
             0 - Nothing
             1 - Toggle theater mode setting
             2 - Brightness boost
     -->
-    <integer name="config_triplePressOnPowerBehavior">0</integer>
+    <integer name="config_triplePressOnPowerBehavior">4</integer>
 
     <!-- Control the behavior when the user presses the sleep button.
             0 - Go to sleep (doze)
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 6339007..a239be3 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -194,6 +194,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     static final int MULTI_PRESS_POWER_NOTHING = 0;
     static final int MULTI_PRESS_POWER_THEATER_MODE = 1;
     static final int MULTI_PRESS_POWER_BRIGHTNESS_BOOST = 2;
+    static final int MULTI_PRESS_POWER_BACK = 3;
+    static final int MULTI_PRESS_POWER_MENU = 4;
 
     // These need to match the documentation/constant in
     // core/res/res/values/config.xml
@@ -1244,6 +1246,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 case SHORT_PRESS_POWER_GO_TO_SLEEP:
                     mPowerManager.goToSleep(eventTime,
                             PowerManager.GO_TO_SLEEP_REASON_POWER_BUTTON, 0);
+                    launchHomeFromHotKey();
                     break;
                 case SHORT_PRESS_POWER_REALLY_GO_TO_SLEEP:
                     mPowerManager.goToSleep(eventTime,
@@ -1298,6 +1301,20 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 }
                 mPowerManager.boostScreenBrightness(eventTime);
                 break;
+           case MULTI_PRESS_POWER_BACK:
+                Slog.i(TAG, "Sending back key.");
+                if (!interactive) {
+                    wakeUpFromPowerKey(eventTime);
+                }
+                triggerVirtualKeypress(KeyEvent.KEYCODE_BACK);
+                break;
+           case MULTI_PRESS_POWER_MENU:
+                Slog.i(TAG, "Sending menu key.");
+                if (!interactive) {
+                    wakeUpFromPowerKey(eventTime);
+                }
+                triggerVirtualKeypress(KeyEvent.KEYCODE_MENU);
+                break;
         }
     }
 
